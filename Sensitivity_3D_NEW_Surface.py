import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import griddata

# This script reads the CSV file generated by the main simulation
# and creates a 3D surface plot of the sensor's sensitivity.

# --- Load Data ---
csv_filename = 'sensitivity_data_all.csv'
try:
    df = pd.read_csv(csv_filename)
except FileNotFoundError:
    print(f"Error: '{csv_filename}' not found.")
    print("Please make sure the CSV file is in the same directory as this script.")
    exit()

# --- Prepare Data for Plotting ---
# Extract the columns for the x, y, and z axes
x = df['Angle (deg)']
y = df['Concentration (uM)']
z = df['Sensitivity (nm/uM)']

# Take the log of the concentration data for plotting on a linear scale
log_y = np.log10(y)

# --- Create a Grid and Interpolate Data ---
# Create a uniform grid to plot the surface on. 200j is a complex number
# that tells linspace to create 200 points.
x_grid, y_grid = np.mgrid[x.min():x.max():200j, log_y.min():log_y.max():200j]

# Interpolate the scattered z data onto the uniform grid.
# The 'cubic' method creates a smooth surface.
z_grid = griddata((x, log_y), z, (x_grid, y_grid), method='cubic')


# --- Create 3D Plot ---
print("Generating 3D surface plot...")
fig = plt.figure(figsize=(12, 9))
ax = fig.add_subplot(111, projection='3d')

# Plot the interpolated data as a surface.
surf = ax.plot_surface(x_grid, y_grid, z_grid, cmap='viridis', edgecolor='none', antialiased=True)

# --- Customize Plot ---
ax.set_xlabel('Angle (deg)', fontsize=12, labelpad=15)
ax.set_ylabel('Log10(Concentration (µM))', fontsize=12, labelpad=15)
ax.set_zlabel('Sensitivity (nm/µM)', fontsize=12, labelpad=15)


# Add a color bar which maps values to colors.
fig.colorbar(surf, shrink=0.6, aspect=10, label='Sensitivity (nm/µM)')

# Improve viewing angle
ax.view_init(elev=20., azim=--30)

plt.tight_layout()
plt.show()
print("Plot generation complete.")

