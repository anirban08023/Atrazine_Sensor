import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import griddata

# This script reads the CSV file generated by the main simulation
# and creates a 3D scatter plot of the sensor's sensitivity.

# --- Load Data ---
csv_filename = 'sensitivity_data_all.csv'
try:
    df = pd.read_csv(csv_filename)
except FileNotFoundError:
    print(f"Error: '{csv_filename}' not found.")
    print("Please make sure the CSV file is in the same directory as this script.")
    exit()

# --- Prepare Data for Plotting ---
# Extract the columns for the x, y, and z axes
x = df['Angle (deg)']
y = df['Concentration (uM)']
z = df['Sensitivity (nm/uM)']


# --- Create 3D Plot ---
print("Generating 3D scatter plot...")
fig = plt.figure(figsize=(12, 9))
ax = fig.add_subplot(111, projection='3d')

# FIX: Plot the log of the 'y' data on a linear axis to avoid distortion.
# The color of each point ('c') is still determined by its sensitivity value (z).
scatter = ax.scatter(x, np.log10(y), z, c=z, cmap='viridis', marker='o', alpha=0.8, s=50)

# --- Customize Plot ---
ax.set_xlabel('Angle (deg)', fontsize=12, labelpad=15)
# FIX: Update the y-axis label to show that the scale is now Log10.
ax.set_ylabel('Log10(Concentration (µM))', fontsize=12, labelpad=15)
ax.set_zlabel('Sensitivity (nm/µM)', fontsize=12, labelpad=15)

# FIX: REMOVED the distorting line: ax.set_yscale('log')

ax.set_title('Sensor Sensitivity vs. Angle and Concentration (Scatter Plot)', fontsize=16, pad=20)

# Add a color bar which maps values to colors.
fig.colorbar(scatter, shrink=0.6, aspect=10, label='Sensitivity (nm/µM)')

# Improve viewing angle
ax.view_init(elev=20., azim=-65)

plt.tight_layout()
plt.show()
print("Plot generation complete.")


